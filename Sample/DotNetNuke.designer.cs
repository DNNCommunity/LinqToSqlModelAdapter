#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dnn.LinqToSqlModuleSample
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dnn9")]
	public partial class DataContext : Dnn.LinqToSqlModelAdapter.DotNetNukeDataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTab(Tab instance);
    partial void UpdateTab(Tab instance);
    partial void DeleteTab(Tab instance);
    #endregion
		
		public DataContext() : 
				base("Data Source=.;Initial Catalog=dnn9;User ID=sa;Password=Sinbad00", mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tab> Tabs
		{
			get
			{
				return this.GetTable<Tab>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tabs")]
	public partial class Tab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabID;
		
		private int _TabOrder;
		
		private System.Nullable<int> _PortalID;
		
		private string _TabName;
		
		private bool _IsVisible;
		
		private System.Nullable<int> _ParentId;
		
		private string _IconFile;
		
		private bool _DisableLink;
		
		private string _Title;
		
		private string _Description;
		
		private string _KeyWords;
		
		private bool _IsDeleted;
		
		private string _Url;
		
		private string _SkinSrc;
		
		private string _ContainerSrc;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _RefreshInterval;
		
		private string _PageHeadText;
		
		private bool _IsSecure;
		
		private bool _PermanentRedirect;
		
		private double _SiteMapPriority;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _IconFileLarge;
		
		private string _CultureCode;
		
		private System.Nullable<int> _ContentItemID;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private System.Nullable<System.Guid> _DefaultLanguageGuid;
		
		private System.Guid _LocalizedVersionGuid;
		
		private int _Level;
		
		private string _TabPath;
		
		private bool _HasBeenPublished;
		
		private bool _IsSystem;
		
		private EntitySet<Tab> _Tabs;
		
		private EntityRef<Tab> _Tab1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnTabOrderChanging(int value);
    partial void OnTabOrderChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnTabNameChanging(string value);
    partial void OnTabNameChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnDisableLinkChanging(bool value);
    partial void OnDisableLinkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSkinSrcChanging(string value);
    partial void OnSkinSrcChanged();
    partial void OnContainerSrcChanging(string value);
    partial void OnContainerSrcChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRefreshIntervalChanging(System.Nullable<int> value);
    partial void OnRefreshIntervalChanged();
    partial void OnPageHeadTextChanging(string value);
    partial void OnPageHeadTextChanged();
    partial void OnIsSecureChanging(bool value);
    partial void OnIsSecureChanged();
    partial void OnPermanentRedirectChanging(bool value);
    partial void OnPermanentRedirectChanged();
    partial void OnSiteMapPriorityChanging(double value);
    partial void OnSiteMapPriorityChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIconFileLargeChanging(string value);
    partial void OnIconFileLargeChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnContentItemIDChanging(System.Nullable<int> value);
    partial void OnContentItemIDChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnDefaultLanguageGuidChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultLanguageGuidChanged();
    partial void OnLocalizedVersionGuidChanging(System.Guid value);
    partial void OnLocalizedVersionGuidChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTabPathChanging(string value);
    partial void OnTabPathChanged();
    partial void OnHasBeenPublishedChanging(bool value);
    partial void OnHasBeenPublishedChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public Tab()
		{
			this._Tabs = new EntitySet<Tab>(new Action<Tab>(this.attach_Tabs), new Action<Tab>(this.detach_Tabs));
			this._Tab1 = default(EntityRef<Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabOrder", DbType="Int NOT NULL")]
		public int TabOrder
		{
			get
			{
				return this._TabOrder;
			}
			set
			{
				if ((this._TabOrder != value))
				{
					this.OnTabOrderChanging(value);
					this.SendPropertyChanging();
					this._TabOrder = value;
					this.SendPropertyChanged("TabOrder");
					this.OnTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TabName
		{
			get
			{
				return this._TabName;
			}
			set
			{
				if ((this._TabName != value))
				{
					this.OnTabNameChanging(value);
					this.SendPropertyChanging();
					this._TabName = value;
					this.SendPropertyChanged("TabName");
					this.OnTabNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Tab1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(255)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLink", DbType="Bit NOT NULL")]
		public bool DisableLink
		{
			get
			{
				return this._DisableLink;
			}
			set
			{
				if ((this._DisableLink != value))
				{
					this.OnDisableLinkChanging(value);
					this.SendPropertyChanging();
					this._DisableLink = value;
					this.SendPropertyChanged("DisableLink");
					this.OnDisableLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinSrc", DbType="NVarChar(200)")]
		public string SkinSrc
		{
			get
			{
				return this._SkinSrc;
			}
			set
			{
				if ((this._SkinSrc != value))
				{
					this.OnSkinSrcChanging(value);
					this.SendPropertyChanging();
					this._SkinSrc = value;
					this.SendPropertyChanged("SkinSrc");
					this.OnSkinSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerSrc", DbType="NVarChar(200)")]
		public string ContainerSrc
		{
			get
			{
				return this._ContainerSrc;
			}
			set
			{
				if ((this._ContainerSrc != value))
				{
					this.OnContainerSrcChanging(value);
					this.SendPropertyChanging();
					this._ContainerSrc = value;
					this.SendPropertyChanged("ContainerSrc");
					this.OnContainerSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshInterval", DbType="Int")]
		public System.Nullable<int> RefreshInterval
		{
			get
			{
				return this._RefreshInterval;
			}
			set
			{
				if ((this._RefreshInterval != value))
				{
					this.OnRefreshIntervalChanging(value);
					this.SendPropertyChanging();
					this._RefreshInterval = value;
					this.SendPropertyChanged("RefreshInterval");
					this.OnRefreshIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHeadText", DbType="NVarChar(MAX)")]
		public string PageHeadText
		{
			get
			{
				return this._PageHeadText;
			}
			set
			{
				if ((this._PageHeadText != value))
				{
					this.OnPageHeadTextChanging(value);
					this.SendPropertyChanging();
					this._PageHeadText = value;
					this.SendPropertyChanged("PageHeadText");
					this.OnPageHeadTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecure", DbType="Bit NOT NULL")]
		public bool IsSecure
		{
			get
			{
				return this._IsSecure;
			}
			set
			{
				if ((this._IsSecure != value))
				{
					this.OnIsSecureChanging(value);
					this.SendPropertyChanging();
					this._IsSecure = value;
					this.SendPropertyChanged("IsSecure");
					this.OnIsSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentRedirect", DbType="Bit NOT NULL")]
		public bool PermanentRedirect
		{
			get
			{
				return this._PermanentRedirect;
			}
			set
			{
				if ((this._PermanentRedirect != value))
				{
					this.OnPermanentRedirectChanging(value);
					this.SendPropertyChanging();
					this._PermanentRedirect = value;
					this.SendPropertyChanged("PermanentRedirect");
					this.OnPermanentRedirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapPriority", DbType="Float NOT NULL")]
		public double SiteMapPriority
		{
			get
			{
				return this._SiteMapPriority;
			}
			set
			{
				if ((this._SiteMapPriority != value))
				{
					this.OnSiteMapPriorityChanging(value);
					this.SendPropertyChanging();
					this._SiteMapPriority = value;
					this.SendPropertyChanged("SiteMapPriority");
					this.OnSiteMapPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFileLarge", DbType="NVarChar(255)")]
		public string IconFileLarge
		{
			get
			{
				return this._IconFileLarge;
			}
			set
			{
				if ((this._IconFileLarge != value))
				{
					this.OnIconFileLargeChanging(value);
					this.SendPropertyChanging();
					this._IconFileLarge = value;
					this.SendPropertyChanged("IconFileLarge");
					this.OnIconFileLargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int")]
		public System.Nullable<int> ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultLanguageGuid
		{
			get
			{
				return this._DefaultLanguageGuid;
			}
			set
			{
				if ((this._DefaultLanguageGuid != value))
				{
					this.OnDefaultLanguageGuidChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageGuid = value;
					this.SendPropertyChanged("DefaultLanguageGuid");
					this.OnDefaultLanguageGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedVersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocalizedVersionGuid
		{
			get
			{
				return this._LocalizedVersionGuid;
			}
			set
			{
				if ((this._LocalizedVersionGuid != value))
				{
					this.OnLocalizedVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._LocalizedVersionGuid = value;
					this.SendPropertyChanged("LocalizedVersionGuid");
					this.OnLocalizedVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabPath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TabPath
		{
			get
			{
				return this._TabPath;
			}
			set
			{
				if ((this._TabPath != value))
				{
					this.OnTabPathChanging(value);
					this.SendPropertyChanging();
					this._TabPath = value;
					this.SendPropertyChanged("TabPath");
					this.OnTabPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenPublished", DbType="Bit NOT NULL")]
		public bool HasBeenPublished
		{
			get
			{
				return this._HasBeenPublished;
			}
			set
			{
				if ((this._HasBeenPublished != value))
				{
					this.OnHasBeenPublishedChanging(value);
					this.SendPropertyChanging();
					this._HasBeenPublished = value;
					this.SendPropertyChanged("HasBeenPublished");
					this.OnHasBeenPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_Tab", Storage="_Tabs", ThisKey="TabID", OtherKey="ParentId")]
		public EntitySet<Tab> Tabs
		{
			get
			{
				return this._Tabs;
			}
			set
			{
				this._Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab_Tab", Storage="_Tab1", ThisKey="ParentId", OtherKey="TabID", IsForeignKey=true)]
		public Tab Tab1
		{
			get
			{
				return this._Tab1.Entity;
			}
			set
			{
				Tab previousValue = this._Tab1.Entity;
				if (((previousValue != value) 
							|| (this._Tab1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab1.Entity = null;
						previousValue.Tabs.Remove(this);
					}
					this._Tab1.Entity = value;
					if ((value != null))
					{
						value.Tabs.Add(this);
						this._ParentId = value.TabID;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tab1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = this;
		}
		
		private void detach_Tabs(Tab entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = null;
		}
	}
}
#pragma warning restore 1591
